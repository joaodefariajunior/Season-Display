{"version":3,"sources":["SeasonDisplay.jsx","Loading.jsx","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Loading","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderSeason","React","Component","ReactDom","render","document","querySelector"],"mappings":"+LAEMA,G,MAAa,CACjBC,OAAO,CACLC,KAAK,uBACLC,SAAS,OAEXC,OAAO,CACLF,KAAK,wBACLC,SAAS,eAYE,SAASE,EAAcC,GAClC,IAVaC,EAAIC,EAUXC,GAVOF,EAUUD,EAAMC,KAVZC,GAUgB,IAAIE,MAAOC,YATrC,GAAKH,EAAO,EACbD,EAAM,EAAI,SAAS,SAEjBA,EAAM,EAAI,SAAS,UAKc,EAEnBP,EAAaS,GAA5BP,EAFkC,EAElCA,KAAKC,EAF6B,EAE7BA,SAEZ,OACI,yBAAKS,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,4BAAuBT,EAAvB,WACd,gCAAMD,GACN,uBAAGU,UAAS,6BAAwBT,EAAxB,YC3BP,SAASU,EAAQP,GAC5B,OAGQ,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,sBAAsBN,EAAMQ,UAO3DD,EAAQE,aAAa,CACjBD,QAAQ,c,ICTNE,E,4MACFC,MAAM,CAACV,IAAI,KAAKW,aAAa,I,kEAMR,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GACE,EAAKC,SAAS,CAACjB,IAAIgB,EAASE,OAAOC,cAErC,SAAAC,GAAM,EAAKH,SAAS,CAACN,aAAaS,EAAIb,e,qCAM9C,OAAGc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAC/B,sCAAYqB,KAAKX,MAAMC,eAG9BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAC/B,kBAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAEnC,kBAACM,EAAD,CAASC,QAAQ,qC,+BAIpB,OACI,yBAAKF,UAAU,cACVgB,KAAKC,oB,GA/BJC,IAAMC,WAqCxBC,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,cAAc,W","file":"static/js/main.20e3f2d4.chunk.js","sourcesContent":["import React from 'react'\nimport \"./SeasonDisplay.css\"\nconst seasonConfig={\n  summer:{\n    text:\"Let's hit the beach!\",\n    iconName:'sun'\n  },\n  winter:{\n    text:\"Burrr....it's chilly!\",\n    iconName:'snowflake'\n  }\n};\nconst getSeason=(lat,month)=>{\nif(month > 2 && month <9){\n  return  lat > 0 ? 'summer':'winter';\n } else{\n    return  lat > 0 ? 'winter':'summer';\n }\n};\n\n\nexport default function SeasonDisplay(props) {\n    const season=getSeason(props.lat,new Date().getMonth())\n    const {text,iconName}=seasonConfig[season];\n\n    return (\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive ${iconName} icon`}/>\n          <h1> {text}</h1>\n          <i className={`icon-right massive ${iconName} icon`}/>\n        </div>\n    );\n}\n","import React from 'react'\n\nexport default function Loading(props) {\n    return (\n\n        \n            <div className=\"ui active dimmer\">\n                <div className=\"ui big text loader\">{props.message}</div>\n            </div>\n          \n\n        \n    )\n}\nLoading.defaultProps={\n    message:'Loading...'\n}","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport SeasonDisplay from './SeasonDisplay';\nimport Loading from \"./Loading\";\n\n\nclass App extends React.Component{\n    state={lat:null,errorMessage:''};\n       \n\n        \n    \n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position=>{\n              this.setState({lat:position.coords.latitude})\n            },\n            err=>{this.setState({errorMessage:err.message})\n            }\n        )\n    }\n\n   renderSeason(){\n    if(this.state.errorMessage && !this.state.lat){\n        return <div>Error:{this.state.errorMessage}</div>\n    }\n\n    if(!this.state.errorMessage && this.state.lat){\n        return <SeasonDisplay lat={this.state.lat}/>\n    }\n    return <Loading message=\"Please accept location request\"/>\n };\n   \n    render () {\n        return (\n            <div className=\"border red\">\n                {this.renderSeason()}\n            </div>\n        )\n    }}\n\n\nReactDom.render(<App/>,document.querySelector('#root'));\n\n "],"sourceRoot":""}